// npm install mongodb
import { MongoClient } from "mongodb";

//this is api route and will be api/contact

async function handler(req, res) {
  //if request is post we do this else nothing right now
  if (req.method === "POST") {
    // body parsed he milti hy next so just take out values jo ap body main send kar rhay hain while making request
    const { email, name, message } = req.body;

    //backend py b validation chedk karlo koe input b faulty ho body main to status dedengy 422 k fail hy valid nae hy input
    if (
      !email ||
      !email.includes("@") ||
      !name ||
      name.trim() === "" ||
      !message ||
      message.trim() === ""
    ) {
      res.status(422).json({ message: "Invalid input." });
      return;
    }

    // Store it in a database
    const newMessage = {
      email,
      name,
      message,
    };

    let client;
    // console.log(newMessage);
    try {
      // creating connection to mongodb
      client = await MongoClient.connect(
        "mongodb+srv://admin:admin@cluster0.j8qmjfl.mongodb.net/"
      );
    } catch (error) {
      // if no conection
      res.status(500).json({ message: "connection failed" });
    }

    // need to create instance of db to talk to db
    const db = client.db();
    try {
      // create a collection and then add one item in collection
      const result = await db.collection("messages").insertOne(newMessage);
      // using of entry added in db as our entry id. this will be unique as we are using id generated by mongodb
      newMessage.id = result.insertedId;
    } catch (error) {
      // need to close client connection if failed
      client.close();
      res.status(500).json({ message: "something went wrong with DB" });
      return;
    }
    // need to close client in case of succes also
    client.close();
    
    res
      .status(201)
      .json({
        message: "Successfully stored message!",
        datamessage: newMessage,
      });
  }
}

export default handler;
